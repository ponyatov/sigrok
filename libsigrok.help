`configure' configures libsigrok 0.6.0 to adapt to many kinds of systems.

Usage: /tmp/src/libsigrok/configure [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print `checking ...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for `--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or `..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [/usr/local]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [PREFIX]

By default, `make install' will install all the files in
`/usr/local/bin', `/usr/local/lib' etc.  You can specify
an installation prefix other than `/usr/local' using `--prefix',
for instance `--prefix=$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR            user executables [EPREFIX/bin]
  --sbindir=DIR           system admin executables [EPREFIX/sbin]
  --libexecdir=DIR        program executables [EPREFIX/libexec]
  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]
  --libdir=DIR            object code libraries [EPREFIX/lib]
  --includedir=DIR        C header files [PREFIX/include]
  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
  --infodir=DIR           info documentation [DATAROOTDIR/info]
  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
  --mandir=DIR            man documentation [DATAROOTDIR/man]
  --docdir=DIR            documentation root [DATAROOTDIR/doc/libsigrok]
  --htmldir=DIR           html documentation [DOCDIR]
  --dvidir=DIR            dvi documentation [DOCDIR]
  --pdfdir=DIR            pdf documentation [DOCDIR]
  --psdir=DIR             ps documentation [DOCDIR]

Program names:
  --program-prefix=PREFIX            prepend PREFIX to installed program names
  --program-suffix=SUFFIX            append SUFFIX to installed program names
  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --enable-silent-rules   less verbose build output (undo: "make V=1")
  --disable-silent-rules  verbose build output (undo: "make V=0")
  --enable-dependency-tracking
                          do not reject slow dependency extractors
  --disable-dependency-tracking
                          speeds up one-time build
  --enable-shared[=PKGS]  build shared libraries [default=yes]
  --enable-static[=PKGS]  build static libraries [default=yes]
  --enable-fast-install[=PKGS]
                          optimize for fast installation [default=yes]
  --disable-libtool-lock  avoid locking (might break parallel builds)
  --enable-warnings[=min|max|fatal|no]
                          set compile pedantry level [default=max]
  --disable-largefile     omit support for large files
  --enable-all-drivers    enable all drivers by default [default=yes]
  --enable-agilent-dmm    enable Agilent DMM support
  --enable-appa-55ii      enable Appa 55II support
  --enable-arachnid-labs-re-load-pro
                          enable Arachnid Labs Re:load Pro support
  --enable-asix-sigma     enable ASIX SIGMA/SIGMA2 support
  --enable-atten-pps3xxx  enable Atten PPS3xxx support
  --enable-baylibre-acme  enable BayLibre ACME support
  --enable-beaglelogic    enable BeagleLogic support
  --enable-brymen-bm86x   enable Brymen BM86x support
  --enable-brymen-dmm     enable Brymen DMM support
  --enable-cem-dt-885x    enable CEM DT-885x support
  --enable-center-3xx     enable Center 3xx support
  --enable-chronovu-la    enable ChronoVu LA support
  --enable-colead-slm     enable Colead SLM support
  --enable-conrad-digi-35-cpu
                          enable Conrad DIGI 35 CPU support
  --enable-demo           enable demo support
  --enable-dreamsourcelab-dslogic
                          enable DreamSourceLab DSLogic support
  --enable-fluke-45       enable Fluke 45 support
  --enable-fluke-dmm      enable Fluke DMM support
  --enable-ftdi-la        enable FTDI LA support
  --enable-fx2lafw        enable fx2lafw support
  --enable-gmc-mh-1x-2x   enable GMC MH 1x/2x support
  --enable-gwinstek-gds-800
                          enable GW Instek GDS-800 support
  --enable-gwinstek-gpd   enable GW Instek GPD support
  --enable-hameg-hmo      enable Hameg HMO support
  --enable-hantek-4032l   enable Hantek 4032L support
  --enable-hantek-6xxx    enable Hantek 6xxx support
  --enable-hantek-dso     enable Hantek DSO support
  --enable-hp-3457a       enable HP 3457A support
  --enable-hp-3478a       enable HP 3478A support
  --enable-hung-chang-dso-2100
                          enable Hung-Chang DSO-2100 support
  --enable-ikalogic-scanalogic2
                          enable Ikalogic Scanalogic-2 support
  --enable-ikalogic-scanaplus
                          enable Ikalogic Scanaplus support
  --enable-ipdbg-la       enable IPDBG LA support
  --enable-kecheng-kc-330b
                          enable Kecheng KC-330B support
  --enable-kern-scale     enable KERN scale support
  --enable-korad-kaxxxxp  enable Korad KAxxxxP support
  --enable-lascar-el-usb  enable Lascar EL-USB support
  --enable-lecroy-logicstudio
                          enable LeCroy LogicStudio support
  --enable-lecroy-xstream enable LeCroy X-Stream support
  --enable-manson-hcs-3xxx
                          enable Manson HCS-3xxx support
  --enable-maynuo-m97     enable maynuo-m97 support
  --enable-mic-985xx      enable MIC 985xx support
  --enable-motech-lps-30x enable Motech LPS 30x support
  --enable-norma-dmm      enable Norma DMM support
  --enable-openbench-logic-sniffer
                          enable OpenBench Logic Sniffer support
  --enable-pce-322a       enable PCE PCE-322A support
  --enable-pipistrello-ols
                          enable Pipistrello-OLS support
  --enable-rdtech-dps     enable RDTech DPSxxxx/DPHxxxx support
  --enable-rigol-ds       enable Rigol DS support
  --enable-rohde-schwarz-sme-0x
                          enable Rohde&Schwarz SME-0x support
  --enable-saleae-logic16 enable Saleae Logic16 support
  --enable-saleae-logic-pro
                          enable Saleae Logic Pro support
  --enable-scpi-pps       enable SCPI PPS support
  --enable-serial-dmm     enable serial DMM support
  --enable-serial-lcr     enable serial LCR support
  --enable-siglent-sds    enable Siglent SDS support
  --enable-sysclk-lwla    enable Sysclk LWLA support
  --enable-teleinfo       enable Teleinfo support
  --enable-testo          enable Testo support
  --enable-tondaj-sl-814  enable Tondaj SL-814 support
  --enable-uni-t-dmm      enable UNI-T DMM support
  --enable-uni-t-ut32x    enable UNI-T UT32x support
  --enable-victor-dmm     enable Victor DMM support
  --enable-yokogawa-dlm   enable Yokogawa DL/DLM support
  --enable-zeroplus-logic-cube
                          enable ZEROPLUS Logic Cube support
  --enable-zketech-ebd-usb
                          enable ZKETECH EBD-USB support
  --enable-bindings       build language bindings [default=yes]
  --enable-cxx            build C++ bindings [default=yes]
  --enable-python         build Python bindings [default=yes]
  --enable-ruby           build Ruby bindings [default=yes]
  --enable-java           build Java bindings [default=yes]

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-pic[=PKGS]       try to use only PIC/non-PIC objects [default=use
                          both]
  --with-aix-soname=aix|svr4|both
                          shared library versioning (aka "SONAME") variant to
                          provide on AIX, [default=aix].
  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
  --with-sysroot[=DIR]    Search for dependent libraries within DIR (or the
                          compiler's sysroot if not specified).
  --without-libserialport disable libserialport support [default=detect]
  --without-libftdi       disable libftdi support [default=detect]
  --without-libusb        disable libusb support [default=detect]
  --without-librevisa     disable librevisa support [default=detect]
  --without-libgpib       disable libgpib support [default=detect]
  --without-libieee1284   disable libieee1284 support [default=detect]
  --with-jni-include-path=DIR-LIST (space-separated)
                          specify JNI include directories [default=detect]

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  CXX         C++ compiler command
  CXXFLAGS    C++ compiler flags
  LT_SYS_LIBRARY_PATH
              User-defined run-time library search path.
  CPP         C preprocessor
  CXXCPP      C++ preprocessor
  PKG_CONFIG  path to pkg-config utility
  PKG_CONFIG_PATH
              directories to add to pkg-config's search path
  PKG_CONFIG_LIBDIR
              path overriding pkg-config's built-in search path
  PYTHON      the Python interpreter
  LIBSIGROK_CFLAGS
              C compiler flags for LIBSIGROK, overriding pkg-config
  LIBSIGROK_LIBS
              linker flags for LIBSIGROK, overriding pkg-config
  TESTS_CFLAGS
              C compiler flags for TESTS, overriding pkg-config
  TESTS_LIBS  linker flags for TESTS, overriding pkg-config
  LIBSIGROKCXX_CFLAGS
              C compiler flags for LIBSIGROKCXX, overriding pkg-config
  LIBSIGROKCXX_LIBS
              linker flags for LIBSIGROKCXX, overriding pkg-config
  PYSIGROK_CFLAGS
              C compiler flags for PYSIGROK, overriding pkg-config
  PYSIGROK_LIBS
              linker flags for PYSIGROK, overriding pkg-config
  RBSIGROK_CFLAGS
              C compiler flags for RBSIGROK, overriding pkg-config
  RBSIGROK_LIBS
              linker flags for RBSIGROK, overriding pkg-config

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to <sigrok-devel@lists.sourceforge.net>.
libsigrok home page: <http://www.sigrok.org>.
